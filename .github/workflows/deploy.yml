name: Deployment
on:
  push:
    branches:
      - main
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        id: cache-deps
        uses: ./.github/actions/cached-deps
        with:
          caching: "false"
      - name: Output information
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load & cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    # OIDCで他のクラウドに接続する際には、 id-token: write と contents: read の設定が必要。
    permissions:
      # OIDCトークンの書き込みのため
      id-token: write
      # permissionsを一つでも指定してしまうと、他のpermissionがすべて消えた状態になってしまう。
      # 通常は、actions/checkoutなどでコンテンツを取得する必要があるので、これを指定しないと、アクセスできなくなる。
      contents: read
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Get AWS permissions
        #  AWSにOIDCで接続するための手続き
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # AWSで割り当てたロールを指定する。
          role-to-assume: arn:aws:iam::095962396456:role/github-actions-openIDConnect-s3
          # ここでは、対象のS3バケットのリージョンを指定する。
          aws-region: ap-northeast-1
      - name: Deploy site
        id: deploy
        uses: ./.github/actions/deploy-s3-docker
        with:
          bucket: github-actions-custom-js-actions-send-s3
          dist-folder: ./dist
          # bucket-region: us-east-2
      - name: Output information
        run: |
          echo "Live URL: ${{ steps.deploy.outputs.website-url }}"

      # OIDCの手順
      ## https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html
      ## https://docs.github.com/ja/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services